require('should');
var createModel = require(__dirname+'/../commands/create-model');

describe ('Create Model', function(){
  describe('model class', function(){
    it('should generate model with given attributes', function(){
      var phpClass = createModel.generateModelClass('Album', 'Artist', ['name', 'label', 'bio']);
      phpClass.should.eql([
"<?php",
"// module/Album/src/Album/Model/Artist.php:",
"namespace Album\\Model;",
"",
"class Artist{",
"    public $id;",
"    public $name;",
"    public $label;",
"    public $bio;",
"",
"    public function exchangeArray($data){",
"        $this->id = (isset($data['id'])) ? $data['id'] : null;",
"        $this->name = (isset($data['name'])) ? $data['name'] : null;",
"        $this->label = (isset($data['label'])) ? $data['label'] : null;",
"        $this->bio = (isset($data['bio'])) ? $data['bio'] : null;",
"    }",
"}",
""
      ].join('\n'));
    });
  });

  describe('gateway', function(){
    it('should create simple CRUD table gatway', function(){
      var phpClass = createModel.generateTableGateway('Album', 'Artist', ['name', 'label', 'bio']);
      phpClass.should.equal([
'<?php',
'// module/Album/src/Album/Model/ArtistTable.php:',
  'namespace Album\\Model;',
  '',
  'use Zend\\Db\\Adapter\\Adapter;',
  'use Zend\\Db\\ResultSet\\ResultSet;',
  'use Zend\\Db\\TableGateway\\AbstractTableGateway;',
  '',
  'class ArtistTable extends AbstractTableGateway{',
  '    protected $table =\'artist\';',
  '',
  '    public function __construct(Adapter $adapter){',
  '        $this->adapter = $adapter;',
  '        $this->resultSetPrototype = new ResultSet();',
  '        $this->resultSetPrototype->setArrayObjectPrototype(new Artist());',
  '        $this->initialize();',
  '    }',
  '',
  '    public function fetchAll(){',
  '        $resultSet = $this->select();',
  '        return $resultSet;',
  '    }',
  '',
  '    public function getArtist($id){',
  '        $id  = (int) $id;',
  '        $rowset = $this->select(array(\'id\' => $id));',
  '        $row = $rowset->current();',
  '        if (!$row) {',
  '            throw new \\Exception("Could not find row $id");',
  '        }',
  '        return $row;',
  '    }',
  '',
  '    public function saveArtist(Artist $artist){',
  '        $data = array(',
  '              \'name\' => $artist->name,',
  '              \'label\' => $artist->label,',
  '              \'bio\' => $artist->bio,',
  '        );',
  '        $id = (int)$artist->id;',
  '        if ($id == 0) {',
  '            $this->insert($data);',
  '        } else {',
  '            if ($this->getArtist($id)) {',
  '                $this->update($data, array(\'id\' => $id));',
  '            } else {',
  '                throw new \\Exception(\'Form id does not exist\');',
  '            }',
  '        }',
  '    }',
  '',
  '    public function deleteArtist($id){',
  '        $this->delete(array(\'id\' => $id));',
  '    }',
  '}',
  '' ].join('\n'));
    });
    it('should update Module with TableGateway config', function(){
        var input = [
        "<?php",  
        "// -- Table Gateways",
        "class Module{",
        "    public function getServiceConfig(){",
        "        return array(",
        "            'factories' => array(",
        "                // -- factories",
        "            ),",
        ");"].join('\n');

        var result = createModel.addServiceManagerConfig(input, 'Album', 'Artist');
        result.should.eql([
'<?php',
  '// -- Table Gateways',
  'use Album\\Model\\ArtistTable;',
  'class Module{',
  '    public function getServiceConfig(){',
  '        return array(',
  '            \'factories\' => array(',
  '                // -- factories',
  '                \'Album\\Model\\ArtistTable\' => function($sm){',
  '                    $dbAdapter = $sm->get(\'Zend\\Db\\Adapter\\Adapter\');',
  '                    $table     = new ArtistTable($dbAdapter);',
  '                    return $table;',
  '                },',
  '',
  '            ),',
  ');' ].join('\n'));
    });
  });

});
