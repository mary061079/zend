var request = require('request')
  , fs = require('fs')
  , unzip = require('unzip')
  , async = require('async')
  , spawn = require('child_process').spawn;

/**
 * TODO: Cache ZF2 to prevent long init time.
 */
module.exports = function(program, dir, cb){
  var stream = fs.createWriteStream(dir+'/zf2.zip')
  request('https://github.com/zendframework/ZendSkeletonApplication/zipball/master')
    .pipe(unzip.Extract({path:dir}))
    .on('end', function(){
      fs.unlink(dir+'/zf2.zip');
      moveFilesFromZendDir(dir, runComposer(dir, cb));
    });
};

function runComposer(dir, cb){
  return function(){
    php([dir+'/composer.phar', 'self-update'])
      .on('exit', function(){
        php([dir+'/composer.phar', 'install']).on('exit', cb);
      });
  };
}

function log(data){
  process.stdout.write(data.toString());
}
function php(args){
  var php = spawn('php', args);
  php.stdout.on('data', log);
  php.stderr.on('data', log);
  return php;
}

function moveFilesFromZendDir(dir, cb){
  fs.readdir(dir, function(err, files){
    var zenddir = files[0];
    fs.readdir(zenddir, function(err, files){
      async.forEach(files, function(file, cb){
        fs.rename(zenddir+'/'+file, dir+'/'+file, cb);
      }, function(){
        fs.rmdir(zenddir, cb);
      });
    });
  });
}
